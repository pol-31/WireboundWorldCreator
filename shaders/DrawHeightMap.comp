#version 460 core

layout(local_size_x = 16, local_size_y = 16) in; // Adjust the workgroup size as needed

layout(binding = 0, r8) uniform image2D heightmap; // Binding index 0, using GL_RGBA8 format

uniform uvec2 point;    // The point to draw at (x, y) in the grid
uniform uint radius;    // The radius of the drawing
uniform float falloff;  // The falloff value
uniform float color;    // The grayscale color value

void main() {
    ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);

    // Calculate distance from the center point
    float distance = length(vec2(pixelCoord) - vec2(point));

    // Check if the pixel is within the radius
    if (distance <= float(radius)) {
        // Calculate the falloff factor based on distance
        float factor = 1.0 - clamp(distance / float(radius), 0.0, 1.0);

        // Apply the falloff effect using mix
        float falloffFactor = mix(1.0, factor, falloff);

        // Fetch the existing pixel value
        vec4 existingValue = imageLoad(heightmap, pixelCoord);
        float existingGray = existingValue.r;

        // Calculate the new color value by mixing the existing value with the new one
        float newValue = mix(existingGray, color, falloffFactor);

        // Store the new value back in the heightmap
        imageStore(heightmap, pixelCoord, vec4(newValue, newValue, newValue, 1.0));
    }
}
